name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**/*.txt'
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.inl'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.txt'
      - '**/*.hpp'
      - '**/*.cpp'
      - '**/*.inl'

jobs:
  build-linux-gcc:
    name: Build (Linux GCC)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        build_editor: [ON, OFF]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            libx11-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxcursor-dev \
            libxi-dev \
            libgl1-mesa-dev \
            libasound2-dev

      - name: Configure CMake
        run: |
          cmake -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DBUILD_EDITOR=${{ matrix.build_editor }} \
            -G Ninja

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

  build-windows-msvc:
    name: Build (Windows MSVC)
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        build_editor: [ON, OFF]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2

      - name: Configure CMake
        run: |
          cmake -B build `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DBUILD_EDITOR=${{ matrix.build_editor }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
